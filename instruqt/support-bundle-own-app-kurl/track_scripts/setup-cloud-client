#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
# set -euxo pipefail
set -x

# Wait for Instruqt bootstrap to be complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
  echo "Waiting for Instruqt to finish booting the VM"
  sleep 1
done

### authenticate to gcloud
mkdir -p /root/.config/gcloud

debug-message "$(printenv)"

echo $INSTRUQT_GCP_PROJECT_KURL_SERVICE_ACCOUNT_KEY | base64 -d > /root/.config/gcloud/credentials.json

# Activate the service account
gcloud auth activate-service-account --key-file /root/.config/gcloud/credentials.json

# Set our project
gcloud config set project $INSTRUQT_GCP_PROJECT_KURL_PROJECT_ID

# set up kots cli
curl https://kots.io/install | REPL_INSTALL_PATH=/usr/local/bin bash


for i in {1..3}; do
  NODE_IP=$(gcloud compute instances create "kurl-node-$i" \
    --zone europe-west1-b \
    --machine-type n1-standard-8 \
    --image-project ubuntu-os-cloud \
    --image-family ubuntu-2204-lts \
    --boot-disk-size 100GB \
    --boot-disk-type pd-ssd \
    --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

  # add a hard disk for Rook
  gcloud compute disks create rook-disk-"$i" \
    --size=200GB \
    --zone=europe-west1-b

  gcloud compute instances attach-disk "kurl-node-$i" \
    --disk rook-disk-"$i" \
    --zone=europe-west1-b

  echo "${NODE_IP}   kurl-node-$i   # kurl node $i" >> /etc/hosts
done
