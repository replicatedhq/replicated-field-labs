#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

# Wait for Instruqt bootstrap to be complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
  echo "Waiting for Instruqt to finish booting the VM"
  sleep 1
done

### authenticate to gcloud
mkdir -p /root/.config/gcloud
echo "$INSTRUQT_GCP_PROJECT_KURL_SERVICE_ACCOUNT_KEY" | base64 -d > /root/.config/gcloud/credentials.json

# Activate the service account
gcloud auth activate-service-account --key-file /root/.config/gcloud/credentials.json

# Set our project
gcloud config set project "$INSTRUQT_GCP_PROJECT_KURL_PROJECT_ID"

# set up haproxy
DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install haproxy -y

KURL_NODE_1_IP=$(gcloud compute instances describe kurl-node-1 --zone europe-west1-b \
  --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
KURL_NODE_2_IP=$(gcloud compute instances describe kurl-node-2 --zone europe-west1-b \
  --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
KURL_NODE_3_IP=$(gcloud compute instances describe kurl-node-3 --zone europe-west1-b \
  --format='get(networkInterfaces[0].accessConfigs[0].natIP)')

cat <<EOF > /etc/haproxy/haproxy.cfg
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend k8s-api
    bind :6443
    mode tcp
    default_backend k8s-api

backend k8s-api
    mode tcp
    option tcp-check
    balance roundrobin
    server kurl-node-1 $KURL_NODE_1_IP:6443 check
    server kurl-node-2 $KURL_NODE_2_IP:6443 check
    server kurl-node-3 $KURL_NODE_3_IP:6443 check

frontend k8s-ingress-http
    mode tcp
    bind :80
    option tcp-check
    default_backend k8s-ingress-http

backend k8s-ingress-http
    mode tcp
    option tcp-check
    balance roundrobin
    server kurl-node-1 $KURL_NODE_1_IP:80 check
    server kurl-node-2 $KURL_NODE_2_IP:80 check
    server kurl-node-3 $KURL_NODE_3_IP:80 check

frontend kots-admin
    mode tcp
    bind :8800
    option tcp-check
    default_backend kots-admin

backend kots-admin
    mode tcp
    option tcp-check
    server kurl-node-1 $KURL_NODE_1_IP:8800 check

EOF

systemctl restart haproxy
