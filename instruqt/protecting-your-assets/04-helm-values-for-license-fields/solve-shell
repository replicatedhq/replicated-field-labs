#!/usr/bin/env bash
#
# This script runs when the platform check the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

set -euxo pipefail
HOME_DIR=/home/replicant

# there's only one app created by the automation, so just grab the first in the list
export REPLICATED_API_TOKEN=$(agent variable get REPLICATED_API_TOKEN)
export REPLICATED_APP=$(agent variable get REPLICATED_APP)
app_slug=${REPLICATED_APP}
api_token=${REPLICATED_API_TOKEN}

# add license check that we can re-use in multiple templates if needed
cat <<TEMPLATE > ${HOME_DIR}/slackernews/templates/_helpers.tpl

{{- define "slackernews.persistence.enabled" -}}
{{- \$licenseType := "prod" -}}
{{- \$postgresEnabled := .Values.postgres.enabled -}}
{{- if hasKey .Values "global" -}}
  {{- if hasKey .Values.global "replicated" -}}
    {{- if hasKey .Values.global.replicated "licenseType" -}}
      {{- \$licenseType = .Values.global.replicated.licenseType -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{- and (ne \$licenseType "trial") \$postgresEnabled -}}
{{- end }}
TEMPLATE

# add the license check to the beginning of the Slackernews deployment template
sed -i 's/{{ if eq \.Values\.postgres\.enabled true }}/{{- if eq (include "slackernews.persistence.enabled" .) "true" }}/g' your_file.yaml

# bump the version
yq -i '.version = "0.5.1"' ${HOME_DIR}/slackernews/Chart.yaml
helm package ${HOME_DIR}/slackernews --destination ${HOME_DIR}/release
chown -R replicant ${HOME_DIR}/slackernews ${HOME_DIR}/release

replicated release create --promote Unstable --chart ${HOME_DIR}/release/slackernews-0.5.1.tgz --version 0.5.1  \
  --release-notes "Prevents persistence with trial licenses"

# get the sequence number for the release to promote
release_sequence=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Unstable" ) | .releaseSequence')

# promote to the `Beta` channel
replicated release promote ${release_sequence} Beta --version 0.5.1 \
  --release-notes "Prevents persistence with trial licenses"
 
# promote to the `Stable` channel
replicated release promote ${release_sequence} Stable --version 0.5.1 \
  --release-notes "Prevents persistence with trial licenses"

exit 0
