#!/usr/bin/env bash
#
# This script runs when the platform check the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

set -euxo pipefail
HOME_DIR=/home/replicant

# get the helm login and install commands so we can use `helm show values` in
# the challenge

export REPLICATED_API_TOKEN=$(agent variable get REPLICATED_API_TOKEN)
export REPLICATED_APP=$(agent variable get REPLICATED_APP)
app_slug=${REPLICATED_APP}
api_token=${REPLICATED_API_TOKEN}

# get the needed info for the app, we know there's only one so grab the first
app=$(replicated app ls --output json | jq -c '.[0].id')

# get the registry hostname
registry_custom=$(replicated api get /v3/app/${app_id}/custom-hostnames | jq -r '.Body.registry[] | select( .is_default != true ) | .hostname')

# get the needed customer info for the Geeglo customer
customer=$(replicated api get /v3/app/${app_id}/customers | jq -c '.customers[] | select(.name == "Geeglo") | { "login": .email, "password": .installationId, "registryOverride": .channels[0].customHostnameOverrides.registry.hostname }')
registry_override=$(echo "${customer}" | jq -r '.registryOverride')

agent variable set REGISTRY_USERNAME "jq ${customer} -r '.login'"
agent variable set REGISTRY_PASSWORD "jq ${customer} -r '.password'"
agent variable set REGISTRY_HOST "${registry_override:-${registry_host:-${registry_default}}}"

exit 0
