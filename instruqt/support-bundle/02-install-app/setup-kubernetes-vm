#!/usr/bin/env bash
#
# This script runs when the platform setup the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

# convenience library for Replicated lab lifecycle scripts
source /etc/profile.d/header.sh

# install the application
kots_password_base=$(get_password| sha256sum)
kots_password=${kots_password_base::20}
kubectl kots install support-bundle \
  --shared-password ${kots_password} \
  --namespace support \
  --no-port-forward

# Setup kotsadm - expose via loadbalancer
kubectl expose deployment kotsadm -n $(kubectl get pods -A -l app=kotsadm --no-headers | awk '{ print $1 }' ) --type=LoadBalancer --name=kotsadm2 --port=8800 --target-port=3000

## set variables for use in instructions
# there's only one app created by the automation, so just grab the first in the list
access_token=$(get_api_token)
app_slug=$(curl --header 'Accept: application/json' --header "Authorization: ${access_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].slug')

agent variable set USERNAME $(get_username)
agent variable set PASSWORD $(get_password)
agent variable set REPLICATED_APP ${app_slug}
agent variable set KOTS_PASSWORD ${kots_password}

exit 0
