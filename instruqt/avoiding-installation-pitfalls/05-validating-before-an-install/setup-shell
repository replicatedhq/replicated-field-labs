#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail
source /etc/profile.d/header.sh

# get the customer id, since it's the password for the Helm installation
# and users like to copy/paste
api_token=$(get_api_token)
app_id=$(curl --header 'Accept: application/json' --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].id')
customer_id=$(curl --header 'Accept: application/json' --header "Authorization: ${api_token}" "https://api.replicated.com/vendor/v3/app/${app_id}/customers" | jq -r '.customers[0].id')
customer_email=${INSTRUQT_PARTICIPANT_ID}@geeglo.io

# set the customer email so the user doesn't have to do it, also make it a paid license for the optics
omozan_email="${INSTRUQT_PARTICIPANT_ID}@omozan.io"
updated_customer=$(curl --header 'Accept: application/json' --header "Authorization: ${api_token}" "https://api.replicated.com/vendor/v3/app/${app_id}/customer/${customer_id}" | \
  jq -c --arg appId "${app_id}" --arg email "${omozan_email}" '.customer | {"app_id": $appId, "name": .name, "email": $email, "channel_id": .channels[0].id, "expires_at": .expiresAt, "type": "prod", "is_airgap_enabled": .airgap, "is_gitops_supported": .isGitopsSupported, "is_identity_service_supported": .isIdentityServiceSupported, "is_geoaxis_supported": .isGeoaxisSupported, "is_snapshot_supported": .isSnapshotSupported, "is_support_bundle_upload_enabled": .isSupportBundleUploadEnabled, "entitlementValues":[]}')

curl --location "https://api.replicated.com/vendor/v3/customer/${customer_id}" \
  --request PUT --header 'Accept: application/json' --header "Authorization: ${api_token}" \
  --header "Content-Type: application/json" \
  --data "${updated_customer}"
 
# toggle the app to builders mode 
curl  --location "https://api.replicated.com/vendor/v3/app/${app_id}" \
  --request POST --header 'Accept: application/json' --header "Authorization: ${api_token}" \
  --header "Content-Type: application/json" \
  --data '{ "is_foundation": true }'

# help the user out by telling them the expiration date for a 30-day trial
license_expiry=$(date -d "+30 days" "+%B %d, %Y")

agent variable set APP_ID ${app_id}
agent variable set CUSTOMER_ID ${customer_id}
agent variable set LICENSE_EXPIRY "${license_expiry}"
agent variable set CUSTOMER_EMAIL "${customer_email}"
