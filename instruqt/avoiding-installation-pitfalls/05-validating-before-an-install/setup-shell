#!/usr/bin/env bash

# download and use our shared library with auto-download functionality
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/refactor/crdant/builds-comprehensive-library/libs/header.sh
source /etc/profile.d/header.sh

# Initialize setup script with proper error handling
init_setup_script

# get the customer id, since it's the password for the Helm installation
# and users like to copy/paste
api_token=$(get_api_token)
app_id=$(get_app_id "${api_token}")
omozan_customer_id=$(get_customer_id "${api_token}" "${app_id}" 0)

# set the customer email so the user doesn't have to do it, also make it a paid license for the optics
existing_email="${INSTRUQT_PARTICIPANT_ID}@omozan.io"
updated_existing_customer=$(curl --header 'Accept: application/json' --header "Authorization: ${api_token}" "https://api.replicated.com/vendor/v3/app/${app_id}/customer/${omozan_customer_id}" | \
  jq -c --arg appId "${app_id}" --arg email "${existing_email}" '.customer | {"app_id": $appId, "name": .name, "email": $email, "channel_id": .channels[0].id, "expires_at": .expiresAt, "type": "prod", "is_airgap_enabled": .airgap, "is_gitops_supported": .isGitopsSupported, "is_identity_service_supported": .isIdentityServiceSupported, "is_geoaxis_supported": .isGeoaxisSupported, "is_snapshot_supported": .isSnapshotSupported, "is_support_bundle_upload_enabled": .isSupportBundleUploadEnabled, "entitlementValues":[]}')

curl --location "https://api.replicated.com/vendor/v3/customer/${omozan_customer_id}" \
  --request PUT --header 'Accept: application/json' --header "Authorization: ${api_token}" \
  --header "Content-Type: application/json" \
  --data "${updated_existing_customer}"

# email for the customer the user will create
new_customer_email=${INSTRUQT_PARTICIPANT_ID}@geeglo.io
# help the user out by telling them the expiration date for a 30-day trial
license_expiry=$(date -d "+30 days" "+%B %d, %Y")

agent variable set APP_ID ${app_id}
agent variable set CUSTOMER_ID ${omozan_customer_id}
agent variable set LICENSE_EXPIRY "${license_expiry}"
agent variable set CUSTOMER_EMAIL "${new_customer_email}"
