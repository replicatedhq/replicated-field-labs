#!/usr/bin/env bash

# use our shared library with auto-download functionality
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/refactor/crdant/builds-comprehensive-library/libs/header.sh
source /etc/profile.d/header.sh

# Initialize setup script with proper error handling (debug mode for track script)
init_setup_script true

# Setup SSH client configuration
setup_ssh_config

# Generate RSA key for Dropbear SSH server
generate_dropbear_key

# Setup Kubernetes configuration with proper cluster server and ownership
setup_kubernetes_config "${HOME_DIR}" "https://cluster:6443"

# Setup common environment variables and agent variables for Replicated
setup_common_environment

# Setup release directory
setup_release_directory

# Get slackernews sources for the lab
cd "${HOME_DIR}"
get_slackernews

# Update chart version and add SDK dependency
yq -i '.version = "0.2.0"' slackernews/Chart.yaml
replicated_sdk_version=$(get_replicated_sdk_version)
yq -i ".dependencies += []" slackernews/Chart.yaml
yq -i ".dependencies += { \"name\": \"replicated\", \"repository\": \"oci://registry.replicated.com/library\", \"version\": \"${replicated_sdk_version}\"}" slackernews/Chart.yaml

# Update dependencies and package the chart
helm dependency update slackernews
helm package slackernews --destination release

# Get API credentials for release operations
api_token=$(get_api_token)
app_slug=$(get_app_slug)

# Release to the `Unstable` channel
replicated release create --promote Unstable --chart ${HOME_DIR}/release/slackernews-0.2.0.tgz --version 0.2.0 \
  --release-notes "Prepares for distribution with Replicated by incorporating the Replicated SDK" \
  --app ${app_slug} --token ${api_token}

# Get the sequence number for the release to promote
release_sequence=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Unstable" ) | .releaseSequence')

# Promote to the `Beta` channel
replicated release promote ${release_sequence} Beta --version 0.2.0 \
  --release-notes "Prepares for distribution with Replicated by incorporating the Replicated SDK" \
  --app ${app_slug} --token ${api_token}
 
# Promote to the `Stable` channel
replicated release promote ${release_sequence} Stable --version 0.2.0 \
  --release-notes "Prepares for distribution with Replicated by incorporating the Replicated SDK" \
  --app ${app_slug} --token ${api_token}

# Create LTS channel for consistency with other labs
replicated channel create --name LTS --description "Releases with long-term support available" \
  --app ${app_slug} --token ${api_token}

# Remove the helm chart we used to create the release
rm ${HOME_DIR}/release/slackernews-0.2.0.tgz

# Ensure proper permissions
chown -R replicant ${HOME_DIR}/slackernews ${HOME_DIR}/release
