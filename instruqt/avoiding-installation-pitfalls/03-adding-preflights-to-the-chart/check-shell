#!/usr/bin/env bash

# download and use our shared library with auto-download functionality
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/refactor/crdant/builds-comprehensive-library/libs/header.sh
source /etc/profile.d/header.sh

# Initialize check script
init_check_script

# look for the preflight template file
check_condition '[[ -f ${HOME_DIR}/slackernews/templates/troubleshoot/preflights.yaml ]]' \
    'Please create the preflights template file in the Slackernews Helm chart template directory'

helm template ${HOME_DIR}/slackernews > ${HOME_DIR}/template.yaml
chown replicant ${HOME_DIR}/template.yaml

check_condition '[[ "$(helm template ${HOME_DIR}/slackernews | yq '\''select( .kind == "Secret" ) | select( .metadata.labels."troubleshoot.sh/kind" == "preflight" ) | .stringData | has("preflight.yaml")'\'')'" == "true" ]]' \
    'Please add your preflight checks to the preflights template file'

set +e pipefail
check_results="$(helm template ${HOME_DIR}/slackernews | kubectl preflight --interactive=false --format yaml --kubeconfig ${HOME_DIR}/.kube/config -)"
set -e pipefail

# check whether the preflight has been created, we can assume that if it
# has the right number of outcomes they've probably done the work
passes=$(echo "${check_results}" | yq '.pass | length') 
check_condition '[[ "${passes}" == "1" ]]' \
    'Please add the Kubernetes version preflight check to the preflights template'

warns=$(echo "${check_results}" | yq '.warn | length')
check_condition '[[ "${warns}" -eq "1" ]]' \
    'Please make sure you added both the CPU and memory preflight checks to the preflights template'

fails=$(echo "${check_results}" | yq '.fail | length') 
check_condition '[[ "${fails}" -eq "1" ]]' \
    'Please add the storage preflight to the preflights template'

# look for the preflight template file
check_condition '[[ -f ${HOME_DIR}/release/slackernews-0.3.0.tgz ]]' \
    'Please make sure you'\''ve bumped the version of your Helm chart and re-packaged it'

# Finish check and exit with result
finish_check_script
