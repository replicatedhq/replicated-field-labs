#!/usr/bin/env bash

# download and use our shared library with auto-download functionality
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/refactor/crdant/builds-comprehensive-library/libs/header.sh
source /etc/profile.d/header.sh

# Initialize check script
init_check_script

# check for release to Unstable
api_token=$(get_api_token)
unstable_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Unstable" ) | .currentVersion')
check_condition '[[ "${unstable_version}" == "0.3.0" ]]' \
    'Please be sure to release the applicaton to the `Unstable` channel with version `0.3.0`'

# check for promotion to Beta
beta_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Beta" ) | .currentVersion')
check_condition '[[ "${beta_version}" == "0.3.0" ]]' \
    'Please be sure to promote the applicaton to the `Beta` channel with version `0.3.0`'

# check for promotion to Stable
stable_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Stable" ) | .currentVersion')
check_condition '[[ "${stable_version}" == "0.3.0" ]]' \
    'Please be sure to promote the applicaton to the `Stable` channel with version `0.3.0`'

# Finish check and exit with result
finish_check_script
