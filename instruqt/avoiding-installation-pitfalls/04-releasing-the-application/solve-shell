#!/usr/bin/env bash

# download and use our shared library with auto-download functionality
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/refactor/crdant/builds-comprehensive-library/libs/header.sh
source /etc/profile.d/header.sh

# Initialize setup script with proper error handling
init_setup_script


### Setup tmux session with environment variables
#
# In a test scenario Instruqt does not run the user shell for the
# challenge, which means the tmux session is never established. We
# need the session for solve scripts in other challenges to 
# succeed, so let's create it here.
#

setup_instruqt_tmux_session "shell" "replicant" true

# make sure the user will be authenticated and using the right app
tmux send-keys -t shell export SPACE 'REPLICATED_API_TOKEN=' "$(agent variable get REPLICATED_API_TOKEN)" ENTER
tmux send-keys -t shell export SPACE 'REPLICATED_APP=' "$(agent variable get REPLICATED_APP)" ENTER
tmux send-keys -t shell clear ENTER

# get he API token for this script to use
api_token=$(get_api_token)

# get the app slug in order to release the app
app_slug=$(get_app_slug "${api_token}")

# release to the `Unstable` channel
replicated release create --promote Unstable --chart ${HOME_DIR}/release/slackernews-0.3.0.tgz --version 0.3.0  \
  --release-notes "Adds preflight checks to enable customers to validate cluster prerequisites before installing" \
  --app ${app_slug} --token ${api_token}

# get the sequence number for the release to promote
release_sequence=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Unstable" ) | .releaseSequence')

# promote to the `Beta` channel
replicated release promote ${release_sequence} Beta --version 0.3.0 \
  --release-notes "Adds preflight checks to enable customers to validate cluster prerequisites before installing" \
  --app ${app_slug} --token ${api_token}
 
# promote to the `Stable` channel
replicated release promote ${release_sequence} Stable --version 0.3.0 \
  --release-notes "Adds preflight checks to enable customers to validate cluster prerequisites before installing" \
  --app ${app_slug} --token ${api_token}
