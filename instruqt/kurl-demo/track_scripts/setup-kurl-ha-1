#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

# Wait for the Instruqt host bootstrap to finish
until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    sleep 1
done

# simple SSH client setup so we can SSH to/from other primary nodes
cat <<EOF >> "$HOME/.ssh/config"
Host *
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
    PubkeyAcceptedKeyTypes +ssh-rsa
EOF

curl https://kurl.sh/latest > install.sh
chmod +x install.sh

nohup sudo ./install.sh ha ekco-enable-internal-load-balancer > kurl.log 2> kurl.err < /dev/null & disown

cat <<'SAVE_SCRIPT' >> trigger.sh
#!/bin/bash 

sleep 60
sed -e $'s/\x1b\[[0-9;]*m//g' kurl.log > kurl-raw.log
while ! grep "To add MASTER nodes to this installation, run the following script on your other nodes:" kurl-raw.log;
do 
    sleep 30;
    sed -e $'s/\x1b\[[0-9;]*m//g' kurl.log > kurl-raw.log
done

sed -e $'s/\x1b\[[0-9;]*m//g' kurl.log > kurl-raw.log
sed -n '/To add MASTER nodes to this installation, run the following script on your other nodes:/,$p' kurl-raw.log | sed '1d' > kurl-join.sh

chmod +x kurl-join.sh
scp kurl-join.sh kurl-ha-2:~/kurl-join.sh
scp kurl-join.sh kurl-ha-3:~/kurl-join.sh

ssh kurl-ha-2 "./kurl-join.sh" 2> ssh-ha-2.err &
ssh kurl-ha-3 "./kurl-join.sh" 2> ssh-ha-3.err &

SAVE_SCRIPT

chmod a+x trigger.sh
nohup ./trigger.sh > trigger.out 2> trigger.err < /dev/null & disown

exit 0