#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

# simple SSH client setup so we can SSH to/from the shell

cat <<EOF >> "$HOME/.ssh/config"
Host *
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
    PubkeyAcceptedKeyTypes +ssh-rsa
EOF

while ! ssh shell true; do
  echo "Waiting for container SSH to be available..."
  sleep 1
done

# use our shared libary in setup scripts
curl -s -o /etc/profile.d/header.sh https://raw.githubusercontent.com/replicatedhq/replicated-field-labs/feature/crdant/delivering-as-an-appliance/libs/header.sh
source /etc/profile.d/header.sh

api_token=$(get_api_token)
app_slug=$(get_app_slug)
app_id=$(get_app_id)
replicated_sdk_version=$(get_replicated_sdk_version)
embedded_cluster_version=$(get_embedded_cluster_version)

agent variable set USERNAME $(get_username)
agent variable set PASSWORD $(get_password)
agent variable set SLACKERNEWS_DOMAIN $(get_slackernews_domain)
agent variable set REPLICATED_API_TOKEN ${api_token}
agent variable set REPLICATED_APP ${app_slug}
agent variable set REPLICATED_SDK_VERSION ${replicated_sdk_version}
agent variable set EMBEDDED_CLUSTER_VERSION ${embedded_cluster_version}
