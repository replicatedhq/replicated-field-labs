#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euo pipefail
HOME_DIR=/home/replicant
source /etc/profile.d/header.sh

export REPLICATED_API_TOKEN=$(agent variable get REPLICATED_API_TOKEN)
export REPLICATED_APP=$(agent variable get REPLICATED_APP)
app_slug=${REPLICATED_APP}
api_token=${REPLICATED_API_TOKEN}

result=0
#
# check the files in the release
if [[ ! -f ${HOME_DIR}/release/config.yaml ]]; then
  fail-message 'Please add the configuration manifest to the Slackernews release'
  let "result = result + 1"
fi

if [[ "$(yq '.spec.groups[] | select( .name == "slackernews" ) | has("description")' ${HOME_DIR}/release/config.yaml)" == "false" || "$(yq '.spec.groups[] | select( .name == "slackernews" ) | .items[] | select( .name == "slackernews_domain" ) | has("help_text")' ${HOME_DIR}/release/config.yaml)" == "false" || "$(yq '.spec.groups[] | select( .name == "slackernews" ) | .items[] | select( .name == "slackernews_domain" ) | has("help_text")' ${HOME_DIR}/release/config.yaml)" == "false"  ]] ; then
  fail-message 'Please be sure to update the description and help text for the `slackernews` configuration group'
  let "result = result + 1"
fi

if [[ ! "$(yq '.spec.groups[] | select( .name == "slackernews" ) | .items[] | select( .name == "slackernews_domain" ) | .required' ${HOME_DIR}/release/config.yaml)" == "true" ]] ; then
  fail-message 'Please be sure to set the "Ingress Hostname" option as required'
  let "result = result + 1"
fi

if [[ "$(yq '.spec.groups[] | select( .name == "tls" ) | .items[] | select( .name == "tls_cert" ) | has("when")' ${HOME_DIR}/release/config.yaml)" == "false" || "$(yq '.spec.groups[] | select( .name == "tls" ) | .items[] | select( .name == "tls_key" ) | has("when")' ${HOME_DIR}/release/config.yaml)" == "false" || "$(yq '.spec.groups[] | select( .name == "tls" ) | .items[] | select( .name == "tls_ca" ) | has("when")' ${HOME_DIR}/release/config.yaml)" == "false" ]] ; then
  fail-message 'Please be sure to set the conditional display configuration for the certificate upload fields'
  let "result = result + 1"
fi

if [[ ! "$(yq '.spec.groups[] | select( .name == "tls" ) | .items[] | select( .name == "certificate_source" ) | .default' ${HOME_DIR}/release/config.yaml)" == "generate_internal" ]] ; then
  fail-message 'Please be sure to set the default value for the "Certificate Source" option'
  let "result = result + 1"
fi

if [[ "$(yq '.spec.groups[] | select( .name == "slackernews" ) | .items[] | select( .name == "slackernews_domain" ) | has("validation")' ${HOME_DIR}/release/config.yaml)" == "false" ]] ; then
  fail-message 'Please be sure to add validation to the "Ingress Hostname" option'
  let "result = result + 1"
fi

exit ${result}
