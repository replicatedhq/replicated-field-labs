#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

# Wait for Instruqt bootstrap to be complete
while [ ! -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
  echo "Waiting for Instruqt to finish booting the VM"
  sleep 1
done

HOME_DIR=/home/replicant

### authenticate to gcloud
mkdir -p /root/.config/gcloud
echo $INSTRUQT_GCP_PROJECT_AIRGAP_SERVICE_ACCOUNT_KEY | base64 -d > /root/.config/gcloud/credentials.json

# Activate the service account
gcloud auth activate-service-account --key-file /root/.config/gcloud/credentials.json

# Set our project
gcloud config set project $INSTRUQT_GCP_PROJECT_AIRGAP_PROJECT_ID

### Create airgap network
JUMPBOX_IP=$(curl -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip)

# allow SSH accesss from the jumpbox
gcloud compute firewall-rules create allow-jumpbox-ssh \
  --priority 1000 --network airgap --allow tcp:22 \
  --source-ranges ${JUMPBOX_IP}/32

### Assure access to the air-gapped cluster VM
# create an SSH key
SSH_DIR=${HOME_DIR}/.ssh
mkdir -p "${SSH_DIR}" && /bin/chmod 0700 "${SSH_DIR}"
ssh-keygen -t ed25519 -o -a 100 -f ${SSH_DIR}/id_ed25519 -q -N ""
/bin/chmod 0600 ${SSH_DIR}/* && /bin/chown -R replicant:replicant ${SSH_DIR}

# add the key to the SSH metadata
gcloud compute instances add-metadata cluster --zone europe-west1-b \
  --metadata "ssh-keys=replicant:$(cat /home/replicant/id_ed25519.pub)"

# make sure we can refer to the host by name
CLUSTER_IP=$(gcloud compute instances describe cluster --zone europe-west1-b \
  --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
echo "${CLUSTER_IP}   cluster   # airgapped cluster" >> /etc/hosts
