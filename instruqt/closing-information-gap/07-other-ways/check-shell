#!/usr/bin/env bash

# This set line ensures that all failures will cause the script to error and exit
set -euxo pipefail

result=0

# check whether the URI has been added to the spec
uri_added=$(yq '.spec.has("uri")')
if [[ "${uri_added}" ]] ; then
  fail-message 'Please check your support bundle definition to make sure you added the uri for the updated bundle'
  let "result = result + 1"
fi
# check for release to Unstable
api_token=$(get_api_token)
unstable_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Unstable" ) | .currentVersion')
if [[ ! "${unstable_version}" == "16.9.1"  ]] ; then
  fail-message $'Please be sure to release the applicaton to the \`Unstable\` channel with version \`16.9.1\`'
  let "result = result + 1"
fi

# check for promotion to Beta
beta_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Beta" ) | .currentVersion')
if [[ ! "${beta_version}" == "16.9.1"  ]] ; then
  fail-message $'Please be sure to promote the applicaton to the \`Beta\` channel with version \`16.9.1\`'
  let "result = result + 1"
fi

# check for promotion to Stable
stable_version=$(curl --header "Accept: application/json" --header "Authorization: ${api_token}" https://api.replicated.com/vendor/v3/apps | jq -r '.apps[0].channels[] | select( .name == "Stable" ) | .currentVersion')
if [[ ! "${stable_version}" == "16.9.1"  ]] ; then
  fail-message $'Please be sure to promote the applicaton to the \`Stable\` channel with version \`16.9.1\`'
  let "result = result + 1"
fi

# check that the upgraade chart is installed
installed_chart=$(helm list -o yaml --kubeconfig /home/replicant/.kube/config | yq '.[0].chart')
if [[ ! "${installed_chart}" == "harbor-16.9.1"  ]] ; then
  fail-message $'Please be sure to upgrade the customer\'s instance to the verison including your updated support bundle'
  let "result = result + 1"
fi

exit ${result}
